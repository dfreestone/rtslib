// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// c_raster
NumericVector c_raster(NumericVector events, NumericVector pattern, int event_count);
RcppExport SEXP _rtslib_c_raster(SEXP eventsSEXP, SEXP patternSEXP, SEXP event_countSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pattern(patternSEXP);
    Rcpp::traits::input_parameter< int >::type event_count(event_countSEXP);
    rcpp_result_gen = Rcpp::wrap(c_raster(events, pattern, event_count));
    return rcpp_result_gen;
END_RCPP
}
// c_flushes
NumericVector c_flushes(NumericVector data, int nevents);
RcppExport SEXP _rtslib_c_flushes(SEXP dataSEXP, SEXP neventsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type nevents(neventsSEXP);
    rcpp_result_gen = Rcpp::wrap(c_flushes(data, nevents));
    return rcpp_result_gen;
END_RCPP
}
// c_parameter_ids
NumericVector c_parameter_ids(NumericVector event, int event_count, int start_code, int stop_code);
RcppExport SEXP _rtslib_c_parameter_ids(SEXP eventSEXP, SEXP event_countSEXP, SEXP start_codeSEXP, SEXP stop_codeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< int >::type event_count(event_countSEXP);
    Rcpp::traits::input_parameter< int >::type start_code(start_codeSEXP);
    Rcpp::traits::input_parameter< int >::type stop_code(stop_codeSEXP);
    rcpp_result_gen = Rcpp::wrap(c_parameter_ids(event, event_count, start_code, stop_code));
    return rcpp_result_gen;
END_RCPP
}
// c_trialdef
NumericVector c_trialdef(NumericVector events, NumericVector pattern, int event_count, int pattern_count, bool from_first);
RcppExport SEXP _rtslib_c_trialdef(SEXP eventsSEXP, SEXP patternSEXP, SEXP event_countSEXP, SEXP pattern_countSEXP, SEXP from_firstSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pattern(patternSEXP);
    Rcpp::traits::input_parameter< int >::type event_count(event_countSEXP);
    Rcpp::traits::input_parameter< int >::type pattern_count(pattern_countSEXP);
    Rcpp::traits::input_parameter< bool >::type from_first(from_firstSEXP);
    rcpp_result_gen = Rcpp::wrap(c_trialdef(events, pattern, event_count, pattern_count, from_first));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rtslib_c_raster", (DL_FUNC) &_rtslib_c_raster, 3},
    {"_rtslib_c_flushes", (DL_FUNC) &_rtslib_c_flushes, 2},
    {"_rtslib_c_parameter_ids", (DL_FUNC) &_rtslib_c_parameter_ids, 4},
    {"_rtslib_c_trialdef", (DL_FUNC) &_rtslib_c_trialdef, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_rtslib(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
